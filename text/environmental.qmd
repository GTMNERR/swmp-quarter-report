---
title: "Environmental"
execute: 
  warning: false
  error: false
filters: 
  - lightbox
lightbox: auto
bibliography: references.bib
---

```{r}
#| label: data-load
#| include: false
library(here)

source(here::here('R', '00_loadpackages.R'))
# source(here::here('R', '02.2_load_wrangle_WQ-and-MET.R'))

load(here('output','data', 'MET.Rdata'))

load(here('output','data', 'pi_wq.Rdata'))
load(here('output','data', 'ss_wq.Rdata'))
load(here('output','data', 'fm_wq.Rdata'))
load(here('output','data', 'pc_wq.Rdata'))
```

The following includes variables that establish the estuarine setting: rainfall, water temperature, and salinity. These variables are driven primarily by climatic patterns and largely influence water quality condition.

## Summary

There has been much less rain in the first quarter of the year compared to previous years (@fig-rainfall-1). During the first part of the year, April had the highest amount of monthly rainfall (134 mm) from a Nor'easter and an extremely wet day later in the month (@fig-rainfall-2; @fig-rainfall-3). However, for most of the summer in June and July, northeast Florida received regular and large amounts of precipitation ((@fig-rainfall-2; @fig-rainfall-3). Almost 61% of days in July had recorded rainfall to detectable levels (@fig-rainfall-3). And although air temperatures were highly variable during the first part of the year, since May the air temperature has fallen within the average daily range for the GTMNERR station (@fig-range-atemp-1). However, when comparing June and July to previous years, 2023 has been one of the hotter and wetter years in the record (@fig-range-atemp-2). 

Though air temperature fell within average daily ranges for the station, water temperatures at most of the water quality stations have been on the higher end of the range (@fig-range-temp). All of the sites had increases in the month of May, likely associated with the minimal precipitation the system experienced that month. Daily averages fell within "normal" ranges at the stations within June, but all sites saw much higher temperatures in July (@fig-range-temp).

Nor'easters brought heavy rainfall in [March](https://www.weather.gov/bgm/pastWinterMarch142023) and in [April](https://flaglerlive.com/strong-noreaster-conditions-and-erosion-expected-on-easter-sunday-and-monday/), however their strong winds initially raised salinity at all sites (@fig-range-sal), but was especially pronounced at Pellicer Creek (@fig-range-sal-4). The April Nor'easter had strong winds from the N and NE directions for almost an entire week (@fig-winds). After the winds died down, the effects of the heavy rainfall were evident in the drops in salinity following the storm events.

![Weather Service Image from Flagler Live showing the wind speed predictions for the April Nor\'easter](/images/weather-service-easter.jpg) 

Another Nor'easter occurred June 4-10,2023 which helped to drop air and water temperatures for a short period of time. As a result of the strong winds, increases in water depths (or water level for Pellicer Creek) were observed at all sites during the periods of the Nor'easters (@fig-range-depth).

## Data

### Rainfall

The simplest way to bin rainfall within a single year is to present the data by quarter since the winter "season" in northeast Florida typically spans across years (December of the previous year through February of the following year). Data is also presented as monthly totals and then daily totals as "rain days" which are categorized into Wet (\<10 mm), Very Wet (20-29 mm), and Extremely Wet (\>30 mm) days. All precipitation data uses data from 2002-2023.

```{r}
#| label: fig-rainfall
#| echo: false
#| fig.cap: Rainfall at the Pellicer Creek weather station.
#| fig.subcap:
#|    - "Ongoing quarterly totals of precipitation."
#|    - "Current year monthly total precipitation."
#|    - "Daily rainfall totals for days with more than 1mm of day."
#| layout-ncol: 3

MET |> 
  SWMPrExtension::seasonal_barplot(param = 'totprcp',
                                   season_grps = list(c(1,2,3), 
                                                      c(4,5,6), 
                                                      c(7,8,9), 
                                                      c(10, 11, 12)),
                                   season_names = c('Jan-Mar', 
                                                    'Apr-Jun', 
                                                    'Jul-Sep', 
                                                    'Oct-Dec'),
                                   hist_avg = TRUE,
                                   converted = F) + 
  theme(axis.text.x = element_text(angle = 45,
                                   vjust = 0.6),
        axis.text = element_text(color = "black"))

MET |> 
  filter(datetimestamp > '2023-01-01 00:15') %>%
  mutate(date = as.Date(datetimestamp),
         month = lubridate::month(date, label = T)) %>% 
  group_by(month) %>%
  summarise(sum = sum(totprcp, na.rm = T)) %>%
  # summarise(mean = mean(sum)) %>%
  ggplot(aes(x = month, y = sum)) +
  geom_col(fill = "#0075AC") +
  geom_hline(yintercept = 86.5, linewidth = 2, linetype = "dashed", color = "grey50") +
  geom_text(aes(label = sum), vjust = 1.5, color = "white") +
  scale_y_continuous(expand = c(0,0)) +
  theme_classic() +
  theme(axis.text = element_text(color = "black"),
        axis.title.y = element_text(color = "black")) +
  geom_text(aes(x = "Feb", y = 93), 
            label = "Current annual average: 86.5",
            size = 4.5,
            color = "grey50") +
  labs(x = '',
       y = 'Total Monthly Precipitation (mm)',
       caption = "Hortizontal line represents current year monthly average.")

MET |> 
  filter(datetimestamp > '2023-01-01 00:15') %>%
  aggreswmp(by = "days", FUN = sum, params = "totprcp") %>% 
  filter(totprcp >= 1) %>% 
  mutate(date = as.Date(datetimestamp),
         month = lubridate::month(date, label = T),
         prcp_in = totprcp * 0.0393701,
         prcp_in = round(prcp_in, digits = 1),
         wet = case_when(totprcp < 10 ~ "Not Very Wet (<10mm)",
                         totprcp >= 10 & totprcp < 20 ~ "Wet (10-19mm)",
                         totprcp >= 20 & totprcp < 30 ~ "Very Wet (20-29mm)",
                         totprcp > 30 ~ "Extremely Wet (>30mm)"),
         wet = factor(wet, levels = c("Not Very Wet (<10mm)",
                                      "Wet (10-19mm)",
                                      "Very Wet (20-29mm)",
                                      "Extremely Wet (>30mm)"))) %>% 
  ggplot(aes(x = date, y = totprcp)) +
  geom_segment(aes(x = date, xend = date, y = 0, yend = totprcp),
               size = 1) +
  geom_point(aes(color = wet), size =2, bg = 4) +
  khroma::scale_color_okabeito() + # change color codes
  scale_y_continuous(expand = c(0,0), limits = c(0,50)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b") +
  theme_classic() +
  theme(axis.text = element_text(color = "black"),
        axis.title.y = element_text(color = "black")) +
  labs(x = '',
       y = 'Total Daily Precipitation (mm)',
       color = "Amount of Rain")
```

### Temperature

Air and water temperatures are presented as daily averages (blue line) with historic ranges (daily range and average daily range) provided in shades of gray. All temperature data uses data from 2002-2023. Additionally, due to news reports of extremely high temperatures in the summer months this year, a comparison was made of previous data for the months of June and July with average dew point (°C) and average air temperature (°C) with total monthly precipitation (mm). The greater the dew point, the greater the moisture in the air. This year, 2023, is indicated in red.

```{r}
#| label: fig-range-atemp
#| echo: false
#| fig.cap: Air temperature recoreded at the SWMP weather station.
#| fig-subcap: 
#|    - "Historical daily range of air temperature at the SWMP weather station with current year daily average overlaid in blue."
#|    - "Comparison of average dew point and air temperature with total monthly precipitation for the months of June and July. This year is indicated in red."

historical_daily_range(MET, param = 'atemp', target_yr = 2023)

fun_in <- function(x) sum(x, na.rm = TRUE)

gtm_prcp <- SWMPr::aggreswmp(MET, FUN = fun_in, by = "months", params = c('totprcp')) %>% 
  mutate(prcp_in = totprcp * 0.0393701)

MET %>% 
  SWMPr::aggreswmp(by = "months") %>%
  select(datetimestamp, atemp, rh) %>% 
  mutate(dew_pt = atemp - ((100-rh)/5.),
         dew_pt_f = ((dew_pt*9/5) + 32),
         atemp_f = ((atemp * 9/5) + 32)) %>% 
  # select(datetimestamp, dew_pt_f, atemp_f) %>% 
  dplyr::left_join(gtm_prcp, by = "datetimestamp") %>% 
  # select(-totprcp) %>% 
  mutate(year = lubridate::year(datetimestamp),
         month = lubridate::month(datetimestamp, label = TRUE)) %>% 
  filter(month %in% c("Jun", "Jul"))  %>%
  filter(totprcp > 0) %>% 
    ggplot(aes(x = atemp, y = dew_pt)) +
    geom_point(aes(size = totprcp, color = year >= 2023), alpha = 0.5) +
    scale_size(range = c(1, 24), name="Total Precipitation (mm)") +
    geom_text(aes(label = year), size = 2) +
    facet_wrap(~month, ncol = 1) +
    scale_color_manual(values = c("gray", "red")) +
    theme_classic() +
    labs(x = "Average Air Temperature (C)",
         y = "Average Dew Point (C)") +
    guides(color = "none")

rm(fun_in, gtm_prcp)

```

```{r}
#| label: fig-range-temp
#| echo: false
#| fig.cap: Historical daily range of water temperature at each SWMP water quality station with current year daily average overlaid in blue.
#| fig.subcap:
#|    - "Pine Island"
#|    - "San Sebastian"
#|    - "Fort Matanzas"
#|    - "Pellicer Creek"
#| layout-ncol: 2

historical_daily_range(pi, param = 'temp', target_yr = 2023)

historical_daily_range(ss, param = 'temp', target_yr = 2023)

historical_daily_range(fm, param = 'temp', target_yr = 2023)

historical_daily_range(pc, param = 'temp', target_yr = 2023)
```

### Salinity

```{r}
#| label: fig-range-sal
#| echo: false
#| fig.cap: Historical daily range of salinity at each SWMP water quality station with current year daily average overlaid in blue.
#| fig.subcap:
#|    - "Pine Island"
#|    - "San Sebastian"
#|    - "Fort Matanzas"
#|    - "Pellicer Creek"
#| layout-ncol: 2

historical_daily_range(pi, param = 'sal', target_yr = 2023)

historical_daily_range(ss, param = 'sal', target_yr = 2023)

historical_daily_range(fm, param = 'sal', target_yr = 2023)

historical_daily_range(pc, param = 'sal', target_yr = 2023)
```

### Wind Speed

Wind speeds associated from the Pellicer Creek weather station during the timeperiod of a Nor'easter within the state of Florida, USA (Friday, April 7 - Friday, April 14, 2023). All data is based on five-second readings taken at the weather station which is averaged for each 15-minute timeperiod. The maximum gust during the 15-minute time period is also recorded as "Max Wind Speed".

```{r}
#| label: fig-winds
#| echo: false
#| fig.cap: Hourly wind speed and direction from the Pellicer Creek weather station during the timeperiod of a Nor'easter within the state of Florida, USA (Friday, April 7 - Friday, April 14, 2023). The warmer the color, the higher the recorded wind speed. The arrows indicate the direction the wind was blowing towards and the length of the arrow reflects the wind speed information with longer meaning faster. All data is based upon 5 second readings at the weather station.
#| fig.subcap:
#|    - "Averaged hourly wind speeds"
#|    - "Maximum wind gust recorded within each hour"
#| layout-ncol: 2

# helpful resources
# https://stackoverflow.com/questions/47880918/how-to-plot-wind-direction-with-lat-lon-and-arrow-in-ggplot2 
# https://stackoverflow.com/questions/49639881/how-to-get-a-legend-on-geom-spoke

# create new df for just wspd and direction data with conversions to SI units
MET_wind_April <- MET %>% 
  filter(between(datetimestamp, 
                 as.POSIXct("2023-04-08 00:00:00"), 
                 as.POSIXct("2023-04-14 00:00:00"))) %>%
  aggreswmp(by = "hours", params = c('wspd', 'maxwspd', 'wdir')) %>% 
  mutate(day = lubridate::date(datetimestamp),
         hour = lubridate::hour(datetimestamp),
         wspd_mph = wspd * 2.23694,
         maxwspd_mph = maxwspd * 2.23694,
         wdir_x = ((wdir +180) * 0.0174533)) # angles are in radians not degrees, need to convert for plotting


MET_wind_April %>% 
  filter(day > as.Date("2023-04-07")) %>% 
  ggplot(aes(x = hour, 
             y = day, 
             fill = wspd_mph, 
             angle = wdir_x, 
             radius = scales::rescale(wspd_mph, c(.3, .8)))) +
    geom_raster() +
    geom_spoke(arrow = arrow(length = unit(.05, 'inches'))) + 
    scale_fill_distiller(palette = "RdYlBu") + 
    coord_equal(expand = 0) +
    scale_x_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18,20,22)) +
    theme_classic() +
  theme(axis.text = element_text(color = "black", size = 12),
        legend.position = 'top', 
        legend.direction = 'horizontal') +
  labs(x = "Hour of Day (24hr)",
       y = "",
       fill = "Wind Speed (mph)")


MET_wind_April %>% 
  filter(day > as.Date("2023-04-07")) %>% 
  ggplot(aes(x = hour, 
             y = day, 
             fill = maxwspd_mph, 
             angle = wdir_x, 
             radius = scales::rescale(wspd_mph, c(.3, .8)))) +
    geom_raster() +
    geom_spoke(arrow = arrow(length = unit(.05, 'inches'))) + 
    scale_fill_distiller(palette = "RdYlBu") + 
    coord_equal(expand = 0) +
    scale_x_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18,20,22)) +
    theme_classic() +
  theme(axis.text = element_text(color = "black", size = 12),
        legend.position = 'top', 
        legend.direction = 'horizontal') +
  labs(x = "Hour of Day (24hr)",
       y = "",
       fill = "Max Wind Gusts (mph)")

```

### Water Depth

```{r}
#| label: fig-range-depth
#| echo: false
#| fig.cap: Historical daily range of water depth at each SWMP water quality station with current year daily average overlaid in blue.
#| fig.subcap:
#|    - "Pine Island"
#|    - "San Sebastian"
#|    - "Fort Matanzas"
#|    - "Pellicer Creek"
#| layout-ncol: 2

historical_daily_range(pi, param = 'cdepth', target_yr = 2023)

historical_daily_range(ss, param = 'cdepth', target_yr = 2023)

historical_daily_range(fm, param = 'cdepth', target_yr = 2023)

historical_daily_range(pc, param = 'clevel', target_yr = 2023)
```
