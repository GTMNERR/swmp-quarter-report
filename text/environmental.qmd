---
title: "Environmental"
execute: 
  warning: false
  error: false
filters: 
  - lightbox
lightbox: auto
bibliography: references.bib
---

```{r}
#| label: data-load
#| include: false
library(here)

source(here::here('R', '00_loadpackages.R'))
# source(here::here('R', '02.2_load_wrangle_WQ-and-MET.R'))

load(here('output','data', 'MET.Rdata'))

load(here('output','data', 'pi_wq.Rdata'))
load(here('output','data', 'ss_wq.Rdata'))
load(here('output','data', 'fm_wq.Rdata'))
load(here('output','data', 'pc_wq.Rdata'))
```

The following includes variables that establish the estuarine setting: rainfall, water temperature, and salinity. These variables are driven primarily by climatic patterns and largely influence water quality condition.

## Summary

Nor'easters brought heavy rainfall in [March](https://www.weather.gov/bgm/pastWinterMarch142023), [April](https://flaglerlive.com/strong-noreaster-conditions-and-erosion-expected-on-easter-sunday-and-monday/), June, and December (@fig-rainfall-1; @fig-rainfall-2). These events are discussed 

In July, northeast Florida received consistent and large amounts of precipitation (@fig-rainfall). Almost 61% of days in July had detectable levels of rainfall (@fig-rainfall-2) and it also had the most amount of heavy rain (7.6 - 50 mm/hr) (@fig-rainfall-3). After the summer rains, however, early fall (September - October) was pretty minimal with very few rain days (rain greater than 1 mm) (@fig-rainfall-2). However, even though there were not many rainy days in October at the weather station, all the precipitation for the month was collected on one day: October 12, 2023 (@fig-rainfall-1) which had varying rainfall intensities throughout (@fig-rainfall-3). 

Daily average air temperatures were high and variable during the first part of the year, but daily averages fell within the historical range for the GTMNERR station through October (@fig-range-atemp-1). However, when comparing monthly averages in June and July to previous years, 2023 has been one of the hotter and wetter summers on record (@fig-range-atemp-2). October also experienced a few temperature drops outside of the average range, but only for a short time as values returned to the higher end of the  range within a few days (@fig-range-atemp-1).

Water temperatures have generally been on the higher end of the range throughout the year (@fig-range-temp). Temperatures have been most variable and lower at stations most influenced by freshwater runoff (Pine Island and Pellicer Creek). Daily averages fell within historical ranges at the stations within June, but all stations experienced higher temperatures in July and August (@fig-range-temp). The cooler weather in October also is evident in the water temperatures as clear drops in daily averages were observed at all four stations, though more pronounced at Pellicer Creek, the shallowest of the four stations (@fig-range-temp-4).

As a result of strong N-NE winds, increases in water depths/levels were observed at all stations during the periods of the Nor'easters (@fig-range-depth).

## Data

### Rainfall

Data is  presented as monthly totals and then daily totals as "rain days" which are categorized into Wet (\<10 mm), Very Wet (20-29 mm), and Extremely Wet (\>30 mm) days. 

```{r}
#| label: fig-rainfall-totals
#| include: false
#| fig.cap: Ongoing quarterly totals of precipitation at the Pellicer Creek weather station

# The simplest way to bin rainfall within a single year is to present the data by quarter.

MET |> 
  SWMPrExtension::seasonal_barplot(param = 'totprcp',
                                   season_grps = list(c(1,2,3), 
                                                      c(4,5,6), 
                                                      c(7,8,9), 
                                                      c(10, 11, 12)),
                                   season_names = c('Jan-Mar', 
                                                    'Apr-Jun', 
                                                    'Jul-Sep', 
                                                    'Oct-Dec'),
                                   hist_rng = c(2003,2023),
                                   hist_avg = TRUE,
                                   converted = F) + 
  theme(axis.text.x = element_text(angle = 45,
                                   vjust = 0.6),
        axis.text = element_text(color = "black"))
```

```{r}
#| label: fig-rainfall
#| echo: false
#| fig.cap: Rainfall at the Pellicer Creek weather station.
#| fig.subcap:
#|    - "Current year monthly total precipitation."
#|    - "Daily rainfall totals for days with more than 1mm of day."
#|    - "Hourly rainfall intensity counts by category per month."
#| layout-ncol: 2


MET |> 
  filter(datetimestamp > '2023-01-01 00:15') %>%
  mutate(date = as.Date(datetimestamp),
         month = lubridate::month(date, label = T)) %>% 
  group_by(month) %>%
  summarise(sum = sum(totprcp, na.rm = T)) %>%
  # summarise(mean = mean(sum)) %>%
  ggplot(aes(x = month, y = sum)) +
  geom_col(fill = "#0075AC") +
  geom_hline(yintercept = 96.4, linewidth = 1, linetype = "dashed", color = "grey50") +
  geom_text(aes(label = sum), vjust = 1.5, color = "white") +
  scale_y_continuous(expand = c(0,0)) +
  theme_classic() +
  theme(axis.text = element_text(color = "black", size = 12),
        axis.title.y = element_text(color = "black", size = 12)) +
  geom_text(aes(x = "Feb", y = 105), 
            label = "96.4 mm",
            size = 4.5,
            color = "grey50") +
  labs(x = '',
       y = 'Total Monthly Precipitation (mm)',
       caption = "Hortizontal line represents current year monthly average.")

fun_in <- function(x) sum(x, na.rm = TRUE)

MET |> 
  filter(datetimestamp > '2023-01-01 00:15') %>%
  aggreswmp(by = "days", FUN = fun_in, params = "totprcp") %>% 
  filter(totprcp >= 1) %>% 
  mutate(date = as.Date(datetimestamp),
         month = lubridate::month(date, label = T),
         prcp_in = totprcp * 0.0393701,
         prcp_in = round(prcp_in, digits = 1),
         wet = case_when(totprcp < 10 ~ "Not Very Wet (<10mm)",
                         totprcp >= 10 & totprcp < 20 ~ "Wet (10-19mm)",
                         totprcp >= 20 & totprcp < 30 ~ "Very Wet (20-29mm)",
                         totprcp > 30 ~ "Extremely Wet (>30mm)"),
         wet = factor(wet, levels = c("Not Very Wet (<10mm)",
                                      "Wet (10-19mm)",
                                      "Very Wet (20-29mm)",
                                      "Extremely Wet (>30mm)"))) %>% 
  ggplot(aes(x = date, y = totprcp)) +
  geom_segment(aes(x = date, xend = date, y = 0, yend = totprcp),
               size = 1) +
  geom_point(aes(color = wet), size =2, bg = 4) +
  khroma::scale_color_okabeito() + # change color codes
  scale_y_continuous(expand = c(0,0), limits = c(0,70)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b") +
  theme_classic() +
  theme(axis.text = element_text(color = "black", size = 12),
        axis.title.y = element_text(color = "black", size = 12)) +
  labs(x = '',
       y = 'Total Daily Precipitation (mm)',
       color = "Amount of Rain")


# rainfall intensity 
# in mm/hr

# MET |>
#   filter(datetimestamp > '2023-01-01 00:15') %>%
#   aggreswmp(by = "hours", FUN = fun_in, params = "totprcp") %>%
#   rename(intensity = totprcp) %>%
#   filter(intensity > 0) %>%
#   ggplot() +
#   geom_rect(aes(xmin = as.POSIXct(-Inf, origin = "1960-01-01"),
#                 xmax = as.POSIXct(Inf, origin = "1970-01-01"),
#                 ymin = 2.5, ymax = 7.6),
#             fill = "gray90", alpha = 0.5) +
#   geom_rect(aes(xmin = as.POSIXct(-Inf, origin = "1960-01-01"),
#                 xmax = as.POSIXct(Inf, origin = "1970-01-01"),
#                 ymin = 7.6, ymax = 50),
#             fill = "gray60", alpha = 0.5) +
#   geom_rect(aes(xmin = as.POSIXct(-Inf, origin = "1960-01-01"),
#                 xmax = as.POSIXct(Inf, origin = "1970-01-01"),
#                 ymin = 50, ymax = Inf),
#             fill = "steelblue4", alpha = 0.5) +
#   geom_hline(yintercept = 2.5, linetype = "dashed") +
#   geom_hline(yintercept = 7.6, linetype = "dashed") +
#   geom_segment(aes(x = datetimestamp, xend = datetimestamp, y = 0, yend = intensity)) +
#   geom_point(aes(x = datetimestamp, y = intensity))  +
#   scale_y_continuous(expand = c(0,0), limits = c(0,50)) +
#   scale_x_datetime(date_breaks = "1 month", date_labels = "%b") +
#   theme_bw() +
#   annotate("text",
#            label = "Intense",
#            angle = 90,
#            x = as.POSIXct("2023-01-01 00:00"),
#            y = 1)

MET |>
  filter(datetimestamp > '2023-01-01 00:15') %>% 
  aggreswmp(by = "hours", FUN = fun_in, params = "totprcp") %>% 
  rename(intensity = totprcp) %>% 
  mutate(date = lubridate::date(datetimestamp),
         month = lubridate::month(datetimestamp, label = TRUE),
         intensity_cat = case_when(intensity == 0 ~ "No Rain (0 mm/hr)",
                                    intensity > 0 & intensity < 2.5 ~ "Light Rain (<2.5 mm/hr)",
                                    intensity >= 2.5 & intensity < 7.6 ~ "Moderate Rain (2.5-7.6 mm/hr)",
                                    intensity >= 7.6 & intensity < 50 ~ "Heavy Rain (7.6-50 mm/hr)",
                                    intensity > 30 ~ "Intense Rain (>50mm/hr)"),
         intensity_cat = factor(intensity_cat, levels = c("No Rain (0 mm/hr)",
                                                          "Light Rain (<2.5 mm/hr)",
                                                          "Moderate Rain (2.5-7.6 mm/hr)",
                                                          "Heavy Rain (7.6-50 mm/hr)",
                                                          "Intense Rain (>50mm/hr)")
                                )
         ) %>% 
  # group_by(month, intensity_cat) %>%
  # count() %>%
  filter(intensity_cat != "No Rain (0 mm/hr)") %>% 
  ggplot() +
  geom_bar(aes(x = month, fill = intensity_cat)) +
  ggthemes::scale_fill_colorblind() +
  scale_y_continuous(expand = c(0,0)) +
  theme_classic() +
  theme(axis.text = element_text(color = "black", size = 12),
        axis.title.y = element_text(color = "black", size = 12)) +
  labs(x = "",
       y = "Amount of Hours",
       fill = "Intensity Category")
```

### Daylight

```{r}
MET %>% 
  filter(datetimestamp > '2023-01-01 00:15' ) %>% 
  setstep() %>% 
  threshold_identification(param = c('totpar'),
                           parameter_threshold = c(0),
                           threshold_type = c('>'),
                           time_threshold = 0.25) %>% 
  mutate(date = as.Date(starttime)) %>% 
  filter(duration > 9) %>% 
    # summarize(mean = mean(duration, na.rm = T),
    #         max = max(duration, na.rm = T),
    #         min = min(duration, na.rm = T))
  ggplot(aes(x = date, y = duration)) +
    geom_point() +
  geom_segment(aes(x = date, xend = date, y = 8, yend = duration)) +
  geom_hline(aes(yintercept = 14.75)) +
  geom_hline(aes(yintercept = 12.6)) +
  geom_hline(aes(yintercept = 9.25)) +
  scale_x_date(date_breaks = "months", date_labels = '%b') +
  scale_y_continuous(limits = c(8,15)) +
  theme_classic() +
  theme(axis.text = element_text(color = "black")) +
  labs(x = '',
       y = 'Duration of daylight (hr)') +
  annotate('text',
           label = "12.6",
           x = as.Date('2024-01-10'),
           y = 12.6) +
  annotate('text',
           label = "14.75",
           x = as.Date('2024-01-10'),
           y = 14.75) +
  annotate('text',
           label = '9.25',
           x = as.Date('2024-01-10'),
           y = 9.25)
```

### Temperature

Air and water temperatures are presented as daily averages (blue line) with historic ranges (daily range and average daily range) provided in shades of gray. Additionally, due to news reports of extremely high temperatures in the summer months this year, a comparison was made of previous data for the months of June and July with average dew point (°C) and average air temperature (°C) with total monthly precipitation (mm). The greater the dew point, the greater the moisture in the air. This year, 2023, is indicated in red.

```{r}
#| label: fig-range-atemp
#| echo: false
#| fig.cap: Air temperature recorded at the SWMP weather station.
#| fig-subcap: 
#|    - "Historical daily range of air temperature at the SWMP weather station with current year daily average overlaid in blue."
#|    - "Comparison of average dew point and air temperature with total monthly precipitation for the months of June and July. This year is indicated in red."
#| layout-ncol: 2

historical_daily_range(MET, param = 'atemp', target_yr = 2023)

fun_in <- function(x) sum(x, na.rm = TRUE)

gtm_prcp <- SWMPr::aggreswmp(MET, FUN = fun_in, by = "months", params = c('totprcp')) %>% 
  mutate(prcp_in = totprcp * 0.0393701)

MET %>% 
  SWMPr::aggreswmp(by = "months") %>%
  select(datetimestamp, atemp, rh) %>% 
  mutate(dew_pt = atemp - ((100-rh)/5.),
         dew_pt_f = ((dew_pt*9/5) + 32),
         atemp_f = ((atemp * 9/5) + 32)) %>% 
  # select(datetimestamp, dew_pt_f, atemp_f) %>% 
  dplyr::left_join(gtm_prcp, by = "datetimestamp") %>% 
  # select(-totprcp) %>% 
  mutate(year = lubridate::year(datetimestamp),
         month = lubridate::month(datetimestamp, label = TRUE)) %>% 
  filter(month %in% c("Jun", "Jul"))  %>%
  filter(totprcp > 0) %>% 
    ggplot(aes(x = atemp, y = dew_pt)) +
    geom_point(aes(size = totprcp, color = year >= 2023), alpha = 0.5) +
    scale_size(range = c(1, 24), name="Total Precipitation (mm)") +
    geom_text(aes(label = year), size = 2) +
    facet_wrap(~month, ncol = 1) +
    scale_color_manual(values = c("gray", "red")) +
    theme_classic() +
    theme(axis.text = element_text(size = 12, color = "black"),
          axis.title = element_text(size = 12, color = "black")) +
    labs(x = "Average Air Temperature (\u00b0C)",
         y = "Average Dew Point (\u00b0C)") +
    guides(color = "none")

rm(fun_in, gtm_prcp)

```

```{r}
#| label: fig-range-temp
#| echo: false
#| fig.cap: Historical daily range of water temperature at each SWMP water quality station with current year daily average overlaid in blue.
#| fig.subcap:
#|    - "Pine Island"
#|    - "San Sebastian"
#|    - "Fort Matanzas"
#|    - "Pellicer Creek"
#| layout-ncol: 2

historical_daily_range(pi, param = 'temp', target_yr = 2023)

historical_daily_range(ss, param = 'temp', target_yr = 2023)

historical_daily_range(fm, param = 'temp', target_yr = 2023)

historical_daily_range(pc, param = 'temp', target_yr = 2023)
```

### Salinity

```{r}
#| label: fig-range-sal
#| echo: false
#| fig.cap: Historical daily range of salinity at each SWMP water quality station with current year daily average overlaid in blue.
#| fig.subcap:
#|    - "Pine Island"
#|    - "San Sebastian"
#|    - "Fort Matanzas"
#|    - "Pellicer Creek"
#| layout-ncol: 2

historical_daily_range(pi, param = 'sal', target_yr = 2023)

historical_daily_range(ss, param = 'sal', target_yr = 2023)

historical_daily_range(fm, param = 'sal', target_yr = 2023)

historical_daily_range(pc, param = 'sal', target_yr = 2023)
```

### Water Depth

```{r}
#| label: fig-range-depth
#| echo: false
#| fig.cap: Historical daily range of water depth at each SWMP water quality station with current year daily average overlaid in blue.
#| fig.subcap:
#|    - "Pine Island"
#|    - "San Sebastian"
#|    - "Fort Matanzas"
#|    - "Pellicer Creek"
#| layout-ncol: 2

historical_daily_range(pi, param = 'cdepth', target_yr = 2023)

historical_daily_range(ss, param = 'cdepth', target_yr = 2023)

historical_daily_range(fm, param = 'cdepth', target_yr = 2023)

historical_daily_range(pc, param = 'clevel', target_yr = 2023)
```
